{"version":3,"sources":["components/JobsList.js","components/Header.js","App.js","index.js","registerServiceWorker.js"],"names":["JobsList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","jobsfeed","selectedSkills","selectedLocations","nextProps","setState","react_default","a","createElement","Card","Group","itemsPerRow","doubling","stackable","length","map","job","key","title","applylink","jd","companyname","location","experience","salary","type","skills","startdate","enddate","created","source","timestamp","split","raised","className","Content","Header","Meta","as","skill","key2","react","Label","moment","format","Description","extra","Button","floated","style","backgroundColor","primary","onClick","window","open","block","Dimmer","active","Loader","inverted","Component","PageHeader","handleSkillChange","e","_ref","value","handleLocationChange","_ref2","handleExperienceChange","_ref3","selectedExperience","styles","cart","selectedStyle","locations","options","text","_this$state","icon","textAlign","Icon","name","circular","Segment","Grid","columns","Row","verticalAlign","Column","Dropdown","onChange","placeholder","fluid","multiple","search","selection","App","allJobs","getJobs","axios","get","then","response","data","jobskills","skillObj","push","locationObj","_","uniqBy","catch","error","console","log","compare","arr1","arr2","finalarray","forEach","e1","e2","filteredJobs","show","_this2","_this$state2","Container","components_Header","getFilteredResults","Divider","horizontal","components_JobsList","ReactDOM","render","src_App","document","getElementById","navigator","addEventListener","swUrl","concat","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller"],"mappings":"wWAuGeA,sBAhGb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,SAAUT,EAAMS,SAChBC,eAAgBV,EAAMU,eACtBC,kBAAmBX,EAAMW,mBALZV,yFASOW,GAAU,IAC3BH,EAA6CG,EAA7CH,SAASC,EAAoCE,EAApCF,eAAeC,EAAqBC,EAArBD,kBAC7BP,KAAKS,SAAS,CAACJ,WAASC,iBAAeC,uDAKlC,IACFF,EAAYL,KAAKI,MAAjBC,SACL,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,MAAN,CAAaC,YAAa,EAAGC,UAAU,EAAMC,WAAW,GAErDZ,EACIA,EAASa,OAAS,EACjBb,EAASc,IAAI,SAACC,EAAIC,GAAM,IACjBC,EAAoHF,EAApHE,MAAMC,EAA8GH,EAA9GG,UAAUC,EAAoGJ,EAApGI,GAAGC,EAAiGL,EAAjGK,YAAYC,EAAqFN,EAArFM,SAASC,EAA4EP,EAA5EO,WAAWC,EAAiER,EAAjEQ,OAAOC,EAA0DT,EAA1DS,KAAKC,EAAqDV,EAArDU,OAAOC,EAA8CX,EAA9CW,UAAUC,EAAoCZ,EAApCY,QAAQC,EAA4Bb,EAA5Ba,QAA4Bb,EAApBc,OAAoBd,EAAbe,UAEzG,OADFL,EAASA,EAAOM,MAAM,MACX1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,IAAKA,EAAKgB,QAAQ,EAAMC,UAAU,WACjD5B,EAAAC,EAAAC,cAACC,EAAA,EAAK0B,QAAN,KACE7B,EAAAC,EAAAC,cAACC,EAAA,EAAK2B,OAAN,KAAclB,GACdZ,EAAAC,EAAAC,cAACC,EAAA,EAAK4B,KAAN,KAAYhB,GACRf,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAQE,GAAG,MAAX,mBACAhC,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,UAEbR,EAAOZ,OAAS,EACfY,EAAOX,IAAI,SAACwB,EAAMC,GACb,OAAQlC,EAAAC,EAAAC,cAACiC,EAAA,SAAD,CAAUxB,IAAKuB,GAEZD,EAASjC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOR,UAAU,aAAaI,GAAG,KAAKC,GAAiB,QAI7E,MAILjB,EACGhB,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,UAAUI,GAAG,MAA1B,cAA2ChC,EAAAC,EAAAC,cAAA,QAAM0B,UAAU,QAAQZ,IACpE,KAGFC,EACGjB,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,WAAb,gBAAoC5B,EAAAC,EAAAC,cAAA,QAAM0B,UAAU,QAAQX,IAC7D,KAGFC,EACGlB,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,WAAb,YAAgC5B,EAAAC,EAAAC,cAAA,QAAM0B,UAAU,QAAQV,IACzD,KAGFC,EACGnB,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,WAAb,cAAkC5B,EAAAC,EAAAC,cAAA,QAAM0B,UAAU,QAAQT,IAC3D,KAGHE,GAAaC,EACZtB,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,UAAUI,GAAG,MAA1B,aAA0ChC,EAAAC,EAAAC,cAAA,QAAM0B,UAAU,QAAQS,IAAOhB,GAAWiB,OAAO,iBAA3F,OAAsHtC,EAAAC,EAAAC,cAAA,QAAM0B,UAAU,QAAQS,IAAOf,GAASgB,OAAO,kBAClK,KAGHf,EACLvB,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,UAAUI,GAAG,MAA1B,aAA0ChC,EAAAC,EAAAC,cAAA,QAAM0B,UAAU,QAAQL,IAC1D,KAGRvB,EAAAC,EAAAC,cAACC,EAAA,EAAKoC,YAAN,KAAmBzB,IAErBd,EAAAC,EAAAC,cAACC,EAAA,EAAK0B,QAAN,CAAcW,OAAK,GACfxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQC,QAAS,QAASC,MAAO,CAACC,gBAAiB,kBAAmBC,SAAO,EAACC,QAAS,kBAAMC,OAAOC,KAAKnC,EAAW,YAApH,aAMLb,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAQE,GAAG,KAAKiB,OAAK,GAArB,2CAERjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAM,GACdnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQC,UAAQ,GAAhB,oBAxFaC,kDCqFRC,cAtFb,SAAAA,EAAYrE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiE,IACjBpE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmE,GAAA9D,KAAAH,KAAMJ,KAcRsE,kBAAoB,SAACC,EAADC,GAAiB,IAAXC,EAAWD,EAAXC,MACrBxE,EAAKD,MAAMU,eAAe+D,IAhBZxE,EAmBnByE,qBAAuB,SAACH,EAADI,GAAiB,IAAXF,EAAWE,EAAXF,MACzBxE,EAAKD,MAAMW,kBAAkB8D,IApBdxE,EAuBnB2E,uBAAyB,SAACL,EAADM,GAAiB,IAAXJ,EAAWI,EAAXJ,MAC7BxE,EAAKD,MAAM8E,mBAAmBL,IAtB9BxE,EAAKO,MAAQ,CACTuE,OAAQ,GACRC,KAAM,GACNC,cAAe,GACf/C,OAAQ,IANKjC,yFAUOW,GAAU,IAC3BsB,EAAgCtB,EAAhCsB,OAAOgD,EAAyBtE,EAAzBsE,UAAUH,EAAenE,EAAfmE,OAAOC,EAAQpE,EAARoE,KAC7B5E,KAAKS,SAAS,CAACqB,SAAOgD,YAAUH,SAAOC,0CAiBzC,IAAMG,EAAU,CACd,CAAE1D,IAAK,MAAO2D,KAAM,MAAOX,MAAO,OAClC,CAAEhD,IAAK,UAAW2D,KAAM,UAAWX,MAAO,WAC1C,CAAEhD,IAAK,cAAe2D,KAAM,cAAeX,MAAO,gBAJ7CY,EAOkBjF,KAAKI,MAAzB0B,EAPEmD,EAOFnD,OAAOgD,EAPLG,EAOKH,UAEZ,OACEpE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAQE,GAAG,KAAKwC,MAAI,EAACC,UAAU,UAC7BzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,KAAK,YAAYC,UAAQ,IAC/B5E,EAAAC,EAAAC,cAAC4B,EAAA,EAAOD,QAAR,mBAEF7B,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACL7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMC,QAAS,EAAGxE,WAAS,EAACkE,UAAU,UACtCzE,EAAAC,EAAAC,cAAC4E,EAAA,EAAKE,IAAN,CAAUC,cAAc,UACtBjF,EAAAC,EAAAC,cAAC4E,EAAA,EAAKI,OAAN,KAEM9D,EAAOZ,OAAS,EACbR,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CACAC,SAAU9F,KAAKkE,kBACf6B,YAAY,qBAAqBC,OAAK,EAACC,UAAQ,EAACC,QAAM,EAACC,WAAS,EAACpB,QAASjD,IACzE,MAKVpB,EAAAC,EAAAC,cAAC4E,EAAA,EAAKI,OAAN,KAEKd,GAAcA,EAAU5D,OAAS,EAC7BR,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CACAC,SAAU9F,KAAKsE,qBACfyB,YAAY,kBAAkBC,OAAK,EAACC,UAAQ,EAACC,QAAM,EAACC,WAAS,EAACpB,QAASD,IACtE,MAIVpE,EAAAC,EAAAC,cAAC4E,EAAA,EAAKI,OAAN,KAEMb,EAAQ7D,OAAS,EAChBR,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CACAC,SAAU9F,KAAKwE,uBACfuB,YAAY,oBAAoBC,OAAK,EAACE,QAAM,EAACC,WAAS,EAACpB,QAASA,IAC7D,iBA1EQf,aC2JVoC,cAvJb,SAAAA,EAAYxG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoG,IACjBvG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsG,GAAAjG,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,SAAU,KACVgG,QAAS,GACTvE,OAAQ,GACRxB,eAAgB,GAChBwE,UAAW,GACXvE,kBAAmB,IARNV,mFAcjBG,KAAKsG,4CAML,IAAIzG,EAAQG,KACZuG,IAAMC,IAAI,qCACPC,KAAK,SAAUC,GAEd,GAAGA,EAASC,KAAK,KACPtG,EAAYqG,EAASC,KAArBtG,SACDyB,EAAS,GACTgD,EAAY,GAChBzE,EAASc,IAAI,SAACC,EAAIC,GACZ,IAAIuF,EAAYxF,EAAIU,OAQpB,IAPA8E,EAAYA,EAAUxE,MAAM,OAClBjB,IAAI,SAAAwB,GACT,GAAGA,EAAM,CACN,IAAIkE,EAAW,CAAExF,IAAKsB,EAAOqC,KAAMrC,EAAO0B,MAAO1B,GACjDb,EAAOgF,KAAKD,MAGjBzF,EAAIM,SAAS,CACX,IAAIqF,EAAc,CAAE1F,IAAKD,EAAIM,SAAUsD,KAAM5D,EAAIM,SAAU2C,MAAOjD,EAAIM,UACtEoD,EAAUgC,KAAKC,MAI1BjC,EAAYkC,IAAEC,OAAOnC,EAAU,OAC/BhD,EAASkF,IAAEC,OAAOnF,EAAO,OACzBjC,EAAMY,SAAS,CAAC4F,QAAQhG,EAAUA,WAASyB,SAAOgD,iBAGxDoC,MAAM,SAAUC,GAEfC,QAAQC,IAAIF,kDAOdnH,KAAKS,SAAS,CAACJ,SAAS,OADR,IAAA4E,EAEoDjF,KAAKI,MAApEiG,EAFWpB,EAEXoB,QAAQ/F,EAFG2E,EAEH3E,eAAeC,EAFZ0E,EAEY1E,kBAAkBmE,EAF9BO,EAE8BP,mBAC9C,SAAS4C,EAAQC,EAAKC,GACpB,IAAMC,EAAY,GAQlB,OAPAF,EAAKG,QAAQ,SAACC,GACbH,EAAKE,QAAQ,SAACE,GACPD,GAAMC,GACLH,EAAWX,KAAKa,OAIlBF,EAEV,IAAII,EAAe,GACnBxB,EAAQlF,IAAI,SAACC,GAAM,IACHM,EAA8BN,EAA9BM,SAASI,EAAqBV,EAArBU,OAAOH,EAAcP,EAAdO,WACpBG,EAASA,EAAOM,MAAM,MACrB,IAAI0F,GAAO,EACRxH,EAAeY,OAAO,IAEM,GADPoG,EAAQxF,EAAOxB,GAClBY,SACd4G,GAAM,IAGVvH,EAAkBW,OAAO,IAEO,GADXoG,EAAQ,CAAC5F,GAAUnB,GAClBW,SAClB4G,GAAM,IAGTpD,IAC2B,WAAtBA,EACKA,GAAsB/C,IACtBmG,GAAM,GAGgB,OAAtBpD,EACFoD,GAAM,EAGW,WAAdnG,IACDmG,GAAM,IAIjBA,GACCD,EAAaf,KAAK1F,KAG/BpB,KAAKS,SAAS,CAACJ,SAASwH,qCAKtB,IAAAE,EAAA/H,KAAAgI,EAC4DhI,KAAKI,MAAnEC,EADE2H,EACF3H,SAASyB,EADPkG,EACOlG,OAAOxB,EADd0H,EACc1H,eAAewE,EAD7BkD,EAC6BlD,UAAUvE,EADvCyH,EACuCzH,kBAC9C,OACAG,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACSvH,EAAAC,EAAAC,cAACsH,EAAD,CACIpG,OAAQA,EACRxB,eAAgB,SAACA,GACfyH,EAAKtH,SAAS,CAACH,kBAAgB,WAC3ByH,EAAKI,wBAGXrD,UAAWA,EACXvE,kBAAmB,SAACA,GACnBwH,EAAKtH,SAAS,CAACF,qBAAmB,WAC9BwH,EAAKI,wBAGVzD,mBAAoB,SAACA,GACpBqD,EAAKtH,SAAS,CAACiE,sBAAoB,WACjC0C,QAAQC,IAAI,oBAAoB3C,GAC9BqD,EAAKI,0BAMV9H,EACGK,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAASC,YAAU,GAAnB,gBAAkChI,EAASa,QAC5C,KAENR,EAAAC,EAAAC,cAAC0H,EAAD,CACEjI,SAAUA,EACVC,eAAgBA,EAChBC,kBAAmBA,YAjJhByD,aCClBuE,IAASC,OAAO9H,EAAAC,EAAAC,cAAC6H,EAAD,MAASC,SAASC,eAAe,SCGF,kBAAmBC,WAC9DnF,OAAOoF,iBAAiB,OAAQ,WAC9B,IAAMC,EAAK,GAAAC,OAAMC,GAAN,sBACXJ,UAAUK,cACPC,SAASJ,GACTrC,KAAK,SAAA0C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjJ,QACfwI,UAAUK,cAAcO,WAK1BpC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBH,MAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA","file":"static/js/main.362dc4b6.chunk.js","sourcesContent":["import React, { Component,Fragment } from 'react';\nimport { Button, Card, Header, Label, Dimmer, Loader} from 'semantic-ui-react'\nimport moment from 'moment';\nimport './style.css';\n\n\nclass JobsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        jobsfeed: props.jobsfeed,\n        selectedSkills: props.selectedSkills,\n        selectedLocations: props.selectedLocations\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n      let {jobsfeed,selectedSkills,selectedLocations} = nextProps;\n      this.setState({jobsfeed,selectedSkills,selectedLocations});\n  }\n\n\n\n  render() {\n    let {jobsfeed} = this.state;\n    return (\n      <Card.Group  itemsPerRow={3} doubling={true} stackable={true}>\n    {\n        (jobsfeed)?(\n             jobsfeed.length > 0 ? (\n              jobsfeed.map((job,key)=>{\n                let {title,applylink,jd,companyname,location,experience,salary,type,skills,startdate,enddate,created,source,timestamp} = job;\n                 skills = skills.split(', ');\n                   return   <Card key={key} raised={true} className=\"jobcard\">\n                   <Card.Content>\n                     <Card.Header>{title}</Card.Header>\n                     <Card.Meta>{companyname}</Card.Meta>\n                         <Header as='h4'>Job Description</Header>\n                         <div className='skills'>\n                        {\n                           skills.length > 0 ? (\n                            skills.map((skill,key2)=>{\n                                 return  <Fragment key={key2}>\n                                        {\n                                            skill ?  <Label className='skillLabel' as='a'>{skill}</Label> : null\n                                        }\n                                         </Fragment> \n                            })\n                           ) :(null)\n                        }\n                    </div>\n                     {\n                         (location)?(\n                             <p className='margin5' as='h5' >Location - <span className=\"bold\">{location}</span></p>\n                         ):(null)\n                     }\n                    {\n                         (experience)?(\n                             <p className='margin5'>Experience - <span className=\"bold\">{experience}</span></p>\n                         ):(null)\n                     }\n                      {\n                         (salary)?(\n                             <p className='margin5'>Salary - <span className=\"bold\">{salary}</span></p>\n                         ):(null)\n                     }\n                     {\n                         (type)?(\n                             <p className='margin5'>Job type - <span className=\"bold\">{type}</span></p>\n                         ):(null)\n                     }\n                    {\n                        (startdate && enddate)?(\n                          <p className='margin5' as='h5' >Joining - <span className=\"bold\">{moment(startdate).format(\"MMMM Do YYYY\")}</span> to <span className=\"bold\">{moment(enddate).format(\"MMMM Do YYYY\")}</span></p>\n                         ): (null)\n                     }\n                        {\n                         (created)?(\n                     <p className='margin5' as='h5' >Created - <span className=\"bold\">{created}</span></p>\n                         ): (null)\n                     }\n\n                     <Card.Description>{jd}</Card.Description>\n                   </Card.Content>\n                   <Card.Content extra>\n                       <Button floated={'right'} style={{backgroundColor: 'rgb(1,149,130)'}} primary onClick={()=>  window.open(applylink, '_blank')}>\n                          Apply\n                       </Button>\n                   </Card.Content>\n                 </Card>\n              })\n             ) :( <Header as='h3' block>No results found with selected filters.</Header>)\n        ):(\n          <Dimmer active>\n          <Loader inverted>Loading</Loader>\n         </Dimmer>\n        )\n    }\n      </Card.Group>\n    )\n  }\n}\n\nexport default JobsList;\n","import React, {Component} from 'react'\nimport { Header,Dropdown, Grid,  Icon, Segment } from 'semantic-ui-react'\n\n\nclass PageHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        styles: [],\n        cart: [],\n        selectedStyle: '',\n        skills: []\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n      let {skills,locations,styles,cart} = nextProps;\n      this.setState({skills,locations,styles,cart});\n  }\n\n  handleSkillChange = (e, { value }) =>{\n       this.props.selectedSkills(value);\n  }\n\n  handleLocationChange = (e, { value }) =>{\n      this.props.selectedLocations(value);\n  }\n\n  handleExperienceChange = (e, { value }) =>{\n    this.props.selectedExperience(value);\n  }\n\n\n  render() {\n    const options = [\n      { key: 'all', text: 'All', value: 'All' },\n      { key: 'fresher', text: 'Fresher', value: 'Fresher' },\n      { key: 'experienced', text: 'Experienced', value: 'Experienced' }\n    ]\n\n    let {skills,locations} = this.state;\n\n    return (\n      <div>\n          <Header as='h2' icon textAlign='center'>\n            <Icon name='briefcase' circular />\n            <Header.Content>Jobs Feed</Header.Content>\n          </Header>\n          <Segment>\n     <Grid columns={3} stackable textAlign='center'>\n     <Grid.Row verticalAlign='middle'>\n       <Grid.Column>\n         {\n             skills.length > 0 ? (\n                <Dropdown \n                onChange={this.handleSkillChange}\n                placeholder='Keywords or Skills' fluid multiple search selection options={skills} />\n             ) : null\n         }\n         \n       </Grid.Column>\n\n       <Grid.Column>\n       {\n            locations &&  locations.length > 0 ? (\n                <Dropdown \n                onChange={this.handleLocationChange}\n                placeholder='Select Location' fluid multiple search selection options={locations} />\n             ) : null\n         }\n   \n       </Grid.Column>\n       <Grid.Column>\n       {\n             options.length > 0 ? (\n              <Dropdown \n              onChange={this.handleExperienceChange}\n              placeholder='Select Experience' fluid search selection options={options} />\n             ) : null\n         }\n      \n       </Grid.Column>\n     </Grid.Row>\n   </Grid>\n </Segment>\n\n        </div>\n    )\n  }\n}\n\nexport default PageHeader;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { Container, Divider} from 'semantic-ui-react'\nimport JobsList from './components/JobsList'\nimport Header from './components/Header'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        jobsfeed: null,\n        allJobs: [],\n        skills: [],\n        selectedSkills: [],\n        locations: [],\n        selectedLocations: [],\n\n    }\n  }\n\n  componentDidMount(){\n    this.getJobs();\n  }\n\n\n  // Getting all jobs on page load\n  getJobs(){\n    var _this = this;\n    axios.get('https://api.myjson.com/bins/kez8a')\n      .then(function (response) {\n        // handle success\n        if(response.data){\n             let {jobsfeed} = response.data;\n             let skills = [];\n             let locations = [];\n             jobsfeed.map((job,key)=>{\n                   let jobskills = job.skills;\n                   jobskills = jobskills.split(', ');\n                   jobskills.map(skill=>{\n                        if(skill){\n                           let skillObj = { key: skill, text: skill, value: skill };\n                           skills.push(skillObj);\n                        }\n                   })\n                   if(job.location){\n                        let locationObj = { key: job.location, text: job.location, value: job.location };\n                        locations.push(locationObj)\n                   }\n             })\n             // Getting unique locations and skills \n             locations = _.uniqBy(locations,'key');\n             skills = _.uniqBy(skills,'key');\n             _this.setState({allJobs:jobsfeed, jobsfeed,skills,locations});\n        }\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n\n}\n\n// Getting filtered results based on options selected\n  getFilteredResults(){\n      this.setState({jobsfeed:null})\n      let {allJobs,selectedSkills,selectedLocations,selectedExperience} = this.state;\n      function compare(arr1,arr2){\n        const finalarray =[];\n        arr1.forEach((e1)=>{\n         arr2.forEach((e2)=>{\n             if(e1 == e2){\n                 finalarray.push(e1);\n             }\n           })\n        })\n        return finalarray;\n     }\n     let filteredJobs = [];\n     allJobs.map((job)=>{\n                let {location,skills,experience} = job;\n                 skills = skills.split(', ');\n                  let show = true;\n                  if(selectedSkills.length>0){\n                      let matchedSkills = compare(skills,selectedSkills);\n                      if(matchedSkills.length == 0){\n                         show= false;\n                      }\n                  }\n                  if(selectedLocations.length>0){\n                   let matchedLocations = compare([location],selectedLocations);\n                       if(matchedLocations.length == 0){\n                         show= false;\n                       }\n                   }\n                   if(selectedExperience){\n                        if(selectedExperience == 'Fresher'){\n                             if(selectedExperience != experience){\n                                show= false;\n                             }\n                        }\n                        else if(selectedExperience == 'All') {\n                              show= true;\n                        }\n                        else {\n                              if(experience == 'Fresher'){\n                                show= false;\n                            }\n                        }\n                    }\n                  if(show){\n                      filteredJobs.push(job);\n                  }\n                })\n         this.setState({jobsfeed:filteredJobs});\n\n  }\n\n\n  render() {\n    let {jobsfeed,skills,selectedSkills,locations,selectedLocations} = this.state;\n    return (\n    <Container>\n             <Header\n                 skills={skills}\n                 selectedSkills={(selectedSkills)=> {\n                   this.setState({selectedSkills},()=>{\n                       this.getFilteredResults();\n                   })\n                  }}\n                 locations={locations}\n                 selectedLocations={(selectedLocations)=> {\n                  this.setState({selectedLocations},()=>{\n                      this.getFilteredResults(); \n                  })\n                 }}\n                 selectedExperience={(selectedExperience)=> {\n                  this.setState({selectedExperience},()=>{\n                    console.log('Experience is .. ',selectedExperience);\n                      this.getFilteredResults(); \n                  })\n                 }}\n\n             />\n             {\n                (jobsfeed)?(\n                    <Divider horizontal>Total Jobs - {jobsfeed.length}</Divider>\n                ):(null)\n             }\n             <JobsList\n               jobsfeed={jobsfeed}\n               selectedSkills={selectedSkills}\n               selectedLocations={selectedLocations}\n               />\n    </Container>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}